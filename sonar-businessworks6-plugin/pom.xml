<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tibco.sonar.plugins</groupId>
	<artifactId>sonar-businessworks6-plugin</artifactId>
	<version>1.0.0</version>
	<packaging>sonar-plugin</packaging>

	<name>TIBCO BusinessWorks :: SonarQube Plugin</name>

	<scm>
		<connection>scm:svn:${scmBaseUrl}/Quality/sonar-businessworks6-plugin</connection>
		<developerConnection>scm:svn:${scmBaseUrl}/Quality/sonar-businessworks6-plugin</developerConnection>
		<url>${scmBaseUrl}/Quality/sonar-businessworks6-plugin</url>
	</scm>

	<prerequisites>
		<!-- Note that "prerequisites" not inherited, but used by versions-maven-plugin -->
		<maven>${maven.min.version}</maven>
	</prerequisites>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.min.version>2.2.1</maven.min.version>
		<jdk.min.version>1.7</jdk.min.version>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>
		<!-- Configuration for sonar-packaging-maven-plugin -->
		<sonar.pluginClass>com.tibco.businessworks6.sonar.plugin.BusinessWorksPlugin</sonar.pluginClass>
		<sonar.pluginName>TIBCO BusinessWorks 6</sonar.pluginName>
		<sonar.pluginKey>tibcobw6</sonar.pluginKey>
		<maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
		<sonar.version>4.4.1</sonar.version>
		<sslrVersion>1.20</sslrVersion>
		<sslrSquidVersion>2.4</sslrSquidVersion>
		<!-- ================ -->
		<!-- Plugins versions -->
		<!-- ================ -->
		<version.assembly.plugin>2.4</version.assembly.plugin>
		<version.clean.plugin>2.5</version.clean.plugin>
		<version.compiler.plugin>3.0</version.compiler.plugin>
		<version.dependency.plugin>2.8</version.dependency.plugin>
		<version.deploy.plugin>2.7</version.deploy.plugin>
		<version.enforcer.plugin>1.2</version.enforcer.plugin>
		<version.failsafe.plugin>2.12.4</version.failsafe.plugin>
		<version.install.plugin>2.4</version.install.plugin>
		<version.jar.plugin>2.4</version.jar.plugin>
		<version.jarjar.plugin>1.7</version.jarjar.plugin>
		<version.javadoc.plugin>2.9</version.javadoc.plugin>
		<version.license.plugin>1.9.0</version.license.plugin>
		<version.plugin.plugin>3.2</version.plugin.plugin>
		<version.release.plugin>2.4.2</version.release.plugin>
		<version.resources.plugin>2.6</version.resources.plugin>
		<version.shade.plugin>1.7.1</version.shade.plugin>
		<version.source.plugin>2.2.1</version.source.plugin>
		<version.surefire.plugin>2.12.4</version.surefire.plugin>
		<version.site.plugin>3.2</version.site.plugin>
		<version.gpg.plugin>1.4</version.gpg.plugin>

		<version.animal-sniffer.plugin>1.9</version.animal-sniffer.plugin>
		<version.buildnumber.plugin>1.2</version.buildnumber.plugin>
		<version.native2ascii.plugin>1.0-beta-1</version.native2ascii.plugin>

		<version.sonar-packaging.plugin>1.12.1</version.sonar-packaging.plugin>
		<version.sonar-dev.plugin>1.6</version.sonar-dev.plugin>

		<!-- To configure animal-sniffer to check API compat -->
		<animal-sniffer.signature.groupId>org.codehaus.mojo.signature</animal-sniffer.signature.groupId>
		<animal-sniffer.signature.artifactId>java16</animal-sniffer.signature.artifactId>
		<animal-sniffer.signature.version>1.1</animal-sniffer.signature.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.codehaus.sonar</groupId>
				<artifactId>sonar-plugin-api</artifactId>
				<version>4.5.2</version>
				<exclusions>
					<!-- Required for compatibility with SonarQube 3.x AND 4.x. Xalan and 
						Xerces were provided by SonarQube 3.x but have been removed in 4.0. Excluding 
						them from sonar-plugin-api forces the JAR files to be packaged within the 
						plugin. -->
					<exclusion>
						<groupId>xalan</groupId>
						<artifactId>xalan</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.codehaus.sonar</groupId>
				<artifactId>sonar-testing-harness</artifactId>
				<version>${sonar.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-project</artifactId>
				<version>2.0.7</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.sonar.sslr</groupId>
				<artifactId>sslr-core</artifactId>
				<version>${sslrVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.sonar.sslr</groupId>
				<artifactId>sslr-xpath</artifactId>
				<version>${sslrVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.sonar.sslr</groupId>
				<artifactId>sslr-toolkit</artifactId>
				<version>${sslrVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.sonar.sslr</groupId>
				<artifactId>sslr-testing-harness</artifactId>
				<version>${sslrVersion}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.sonar.sslr-squid-bridge</groupId>
				<artifactId>sslr-squid-bridge</artifactId>
				<version>${sslrSquidVersion}</version>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>2.7.1</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.8.1</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.5.6</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>1.5.6</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>0.9.15</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.0</version>
			</dependency>
			<dependency>
				<groupId>org.easytesting</groupId>
				<artifactId>fest-assert</artifactId>
				<version>1.4</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.tibco.utils.bw</groupId>
			<artifactId>bw6-utils</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-plugin-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar-plugins.xml</groupId>
			<artifactId>xml-squid</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-testing-harness</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-deprecated</artifactId>
			<version>${sonar.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<!-- See SONARPLUGINS-839 and SONARPLUGINS-840 -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav</artifactId>
				<version>1.0-beta-2</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<getRevisionOnlyOnce>true</getRevisionOnlyOnce>
					<revisionOnScmFailure>0</revisionOnScmFailure>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.min.version}</source>
					<target>${jdk.min.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<runOrder>random</runOrder>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<message>To build this project Maven ${maven.min.version} (or
										upper) is required. Please install it.</message>
									<version>${maven.min.version}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<message>To build this project JDK ${jdk.min.version} (or
										upper) is required. Please install it.</message>
									<version>${jdk.min.version}</version>
								</requireJavaVersion>
								<requirePluginVersions>
									<!-- This rule produces warning under Maven 3.0 : "This rule is 
										not compatible with the current version of Maven." -->
									<message>Build reproducibility : always define plugin versions!</message>
									<banLatest>true</banLatest>
									<banRelease>true</banRelease>
									<phases>clean,deploy</phases>
								</requirePluginVersions>
								<bannedDependencies>
									<!-- See SONARPLUGINS-506 -->
									<message>Animal-sniffer throws exception when icu4j version
										2.6.1 used.</message>
									<searchTransitive>true</searchTransitive>
									<excludes>
										<exclude>com.ibm.icu:icu4j:[2.6.1]</exclude>
									</excludes>
								</bannedDependencies>
								<!-- TODO SONARPLUGINS-797 <DependencyConvergence /> -->
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-java-api-compatibility</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<signature>
								<groupId>${animal-sniffer.signature.groupId}</groupId>
								<artifactId>${animal-sniffer.signature.artifactId}</artifactId>
								<version>${animal-sniffer.signature.version}</version>
							</signature>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.sonar</groupId>
				<artifactId>sonar-packaging-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<archive>
						<manifestEntries>
							<!-- ${buildNumber} is the svn revision generated by the buildnumber-maven-plugin -->
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<Build-Time>${timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Plugins ordered by shortname (archetype, assembly ...) -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>${version.animal-sniffer.plugin}</version>
					<configuration>
						<signature>
							<groupId>${animal-sniffer.signature.groupId}</groupId>
							<artifactId>${animal-sniffer.signature.artifactId}</artifactId>
							<version>${animal-sniffer.signature.version}</version>
						</signature>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.assembly.plugin}</version>
					<configuration>
						<archiverConfig>
							<!-- Workaround for http://jira.codehaus.org/browse/MASSEMBLY-422 -->
							<!-- 420(dec) = 644(oct) -->
							<fileMode>420</fileMode>
							<!-- 493(dec) = 755(oct) -->
							<directoryMode>493</directoryMode>
							<defaultDirectoryMode>493</defaultDirectoryMode>
						</archiverConfig>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>${version.buildnumber.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.clean.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.compiler.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${version.dependency.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${version.deploy.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${version.enforcer.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${version.failsafe.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.install.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>jarjar-maven-plugin</artifactId>
					<version>${version.jarjar.plugin}</version>
				</plugin>
				<plugin>
					<groupId>com.mycila.maven-license-plugin</groupId>
					<artifactId>maven-license-plugin</artifactId>
					<version>${version.license.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${version.jar.plugin}</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Version>${project.version}</Version>
								<!-- ${buildNumber} is the svn revision generated by the buildnumber-maven-plugin -->
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<Build-Time>${timestamp}</Build-Time>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${version.javadoc.plugin}</version>
					<configuration>
						<quiet>true</quiet>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${version.plugin.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${version.release.plugin}</version>
					<configuration>
						<tagBase>https://svn.codehaus.org/sonar-plugins/tags</tagBase>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>false</useReleaseProfile>
						<!-- Allows to activate release profile during release. We don't use 
							releaseProfiles parameter, because it affects only release:perform goal -->
						<arguments>-Prelease</arguments>
					</configuration>
					<dependencies>
						<!-- Dependencies required to release a Git branch. See http://jira.codehaus.org/browse/SONARPLUGINS-3344 -->
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-api</artifactId>
							<version>1.8.1</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-gitexe</artifactId>
							<version>1.8.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.resources.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${version.shade.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${version.source.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.surefire.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${version.site.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${version.gpg.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>native2ascii-maven-plugin</artifactId>
					<version>${version.native2ascii.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.sonar</groupId>
					<artifactId>sonar-packaging-maven-plugin</artifactId>
					<version>${version.sonar-packaging.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.sonar</groupId>
					<artifactId>sonar-dev-maven-plugin</artifactId>
					<version>${version.sonar-dev.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.sonar</groupId>
										<artifactId>sonar-packaging-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>check-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mycila.maven-license-plugin</groupId>
										<artifactId>maven-license-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<description>Enable analysis and reporting on BW projects.</description>
</project>
